.ds-details {
  --dsc-details-border: 1px solid var(--dsc-details-border-color);
  --dsc-details-chevron-gap: var(--ds-spacing-2);
  --dsc-details-chevron-size: var(--ds-spacing-6);
  --dsc-details-chevron-url: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M5.97 9.47a.75.75 0 0 1 1.06 0L12 14.44l4.97-4.97a.75.75 0 1 1 1.06 1.06l-5.5 5.5a.75.75 0 0 1-1.06 0l-5.5-5.5a.75.75 0 0 1 0-1.06'/%3E%3C/svg%3E");
  --dsc-details-padding: var(--ds-spacing-2) var(--ds-spacing-4);
  --dsc-details-size: var(--ds-sizing-14);

  /* default color: neutral */
  --dsc-details-heading-background--hover: var(--ds-color-neutral-surface-default);
  --dsc-details-heading-background--open: var(--ds-color-neutral-background-subtle);
  --dsc-details-heading-background: var(--ds-color-neutral-background-default);
  --dsc-details-border-color: var(--ds-color-neutral-border-subtle);

  /* with color */
  [data-color]:where(:not([data-color='neutral'])) &,
  &[data-color]:where(:not([data-color='neutral'])) {
    --dsc-details-background: var(--ds-color-background-subtle);
    --dsc-details-heading-background--hover: var(--ds-color-surface-hover);
    --dsc-details-heading-background--open: var(--ds-color-surface-default);
    --dsc-details-heading-background: var(--ds-color-surface-default);
    --dsc-details-border-color: var(--ds-color-border-subtle);
  }

  /* with subtle */
  [data-color='subtle'] &,
  &[data-color='subtle'] {
    --dsc-details-background: var(--ds-color-neutral-background-subtle);
    --dsc-details-heading-background--hover: var(--ds-color-neutral-surface-hover);
    --dsc-details-heading-background--open: var(--ds-color-neutral-surface-default);
    --dsc-details-heading-background: var(--ds-color-neutral-background-subtle);
    --dsc-details-border-color: var(--ds-color-neutral-border-subtle);
  }

  background: var(--dsc-details-background);
  border-block: var(--dsc-details-border);
  box-sizing: border-box;

  & > :is(summary, u-summary) {
    align-items: center;
    background: var(--dsc-details-heading-background);
    box-sizing: border-box;
    cursor: pointer;
    display: flex;
    list-style: none;
    min-height: var(--dsc-details-size);
    gap: var(--dsc-details-chevron-gap);
    outline: none;
    padding: var(--dsc-details-padding);
    position: relative;

    /* Render focus inside so it is easier to make full window width and place in overflow: hidden containers */
    &:focus-visible {
      box-shadow: inset 0 0 0 var(--dsc-focus-border-width) var(--ds-color-focus-outer);
      outline: var(--ds-color-focus-inner) solid var(--dsc-focus-border-width);
      outline-offset: calc(var(--dsc-focus-border-width) * -2);
    }

    &::before {
      background: currentcolor;
      border-radius: var(--ds-border-radius-md);
      content: '';
      flex-shrink: 0;
      height: var(--dsc-details-chevron-size);
      mask: 50% / contain no-repeat var(--dsc-details-chevron-url);
      width: var(--dsc-details-chevron-size);
    }
  }

  & + & {
    border-top: 0; /* Skip border-top when .ds-details is followed by .ds-details */
    margin-top: 0; /* Prevent gap when places as child of .ds-card */
  }

  & > :not(summary, u-summary) {
    border-radius: inherit;
    padding: var(--ds-spacing-5, 1rem);
  }

  &[open] > :is(summary, u-summary) {
    background: var(--dsc-details-heading-background--open);

    &::before {
      rotate: 180deg;
    }
  }

  @media (hover: hover) and (pointer: fine) {
    & > :is(summary, u-summary):hover {
      background: var(--dsc-details-heading-background--hover);
    }
  }

  @media (prefers-reduced-motion: no-preference) {
    /* biome-ignore lint/correctness/noUnknownProperty: biome does not know about this property yet */
    interpolate-size: allow-keywords;
  }

  &::part(details-content) {
    block-size: 0;
    overflow-y: clip;
    transition: content-visibility 400ms allow-discrete, height 400ms;
  }

  &[open]::part(details-content) {
    height: auto;
  }
}
